extends ./assets/pugs/_layout.pug
block vars
  include ./assets/pugs/_config.pug
  - var key = "top"
  - var page = pages[key]

block header 
  .header.sticky-top
    h2 #{page.title}
    h1=message
block contents
  button aa
  section#board.board.row
  include ./css/css.pug
  include ./include/_script.pug

  script.
    var mounted = (data)=>{
      var taskObj = {};
      data.TICKET_TYPE.forEach(el=>{
        taskObj[el.TICKET_TYPE_CODE] = [];
        data.TICKETS.forEach(ticket=>{
          if(ticket.TICKET_TYPE === el.ID){
            (taskObj[el.TICKET_TYPE_CODE]).push(ticket);
          }
        });
        var taskWrapEl = _createdElement("ul","","taskWrap_"+el.TICKET_TYPE_CODE,"list-group task-wrap");
        
        taskWrapEl.addEventListener('drop',drop_handler);
        taskWrapEl.addEventListener('dragover',dragover_handler);
        var titleEl = _createdElement("h3",el.TICKET_TYPE_NAME,"","");
        var sectionEl = _createdElement("div",titleEl,"","col-4 ticket-table bg-light border mx-1 rounded px-2 py-1");
        taskObj[el.TICKET_TYPE_CODE].forEach(task=>{
            var taskEl = _createdElement("li",task.TICKET_NAME,"task_"+task.ID,"ticket list-group-item my-1 rounded shadow-sm pointer");
            var updatedAt = _createdElement("div",task.UPDATED_AT,"","small text-right text-muted");
            taskEl.appendChild(updatedAt)
            taskEl.setAttribute('draggable', true);
            taskEl.addEventListener("dragstart", dragstart_handler);
            taskEl.addEventListener("dragend", dragend_handler);
            taskWrapEl.appendChild(taskEl);
        })
        sectionEl.appendChild(taskWrapEl)
        var addCardEl = _createdElement("span","+さらにカードを追加","","text-right text-muted pointer");
        var addCardWrapEl = _createdElement("div",addCardEl,"","text-right text-muted pointer")
        addCardEl.addEventListener("click",function(e){add_card(sectionEl,addCardWrapEl,e)});
        sectionEl.appendChild(addCardWrapEl);
        sectionEl.setAttribute("data-cardcode",el.TICKET_TYPE_CODE);
        document.getElementById("board").appendChild(sectionEl);
      })
    }
    ticketMounted(mounted);

    function dragstart_handler(ev) {
      var movingStyle = () => {
        ev.target.style.opacity = "0"
      }
      setTimeout(movingStyle, 0.5);
      ev.dataTransfer.setData("ticket", ev.target.id);
      ev.dataTransfer.dropEffect = "move";
    }
    function dragend_handler(ev) {
      ev.target.style.opacity = "1"  
    }
    function dragover_handler(ev) {
      ev.preventDefault();
      ev.dataTransfer.dropEffect = "move"
    }
    function drop_handler(ev) {
      ev.preventDefault();
      var data = ev.dataTransfer.getData("ticket");
      if(ev.target.nodeName == "LI") return false;
      ev.target.appendChild(document.getElementById(data));
    }

    function add_card(parentEl,afterEl,e){
      var addCardTextArea = _createdElement("textarea","","","list-card-composer-textarea");
      addCardTextArea.setAttribute("placeholder","このカードにタイトルを入力");
      var addCardButton = _createdElement("button","カードを追加","","btn btn-success");
      var addCardTextAreaWrap = _createdElement("div",addCardTextArea,"","");
      addCardButton.addEventListener("click",function(){saveCard()});
      addCardButton.setAttribute("data-cardcode",parentEl.dataset.cardcode);
      addCardTextAreaWrap.append(addCardButton);
      addCardTextArea.addEventListener('blur',function(blurE){foucusoutTextArea(addCardTextAreaWrap,e,blurE,parentEl)});
      parentEl.insertBefore(addCardTextAreaWrap,afterEl);
      addCardTextArea.focus();
      e.target.style.display = "none";
    }
    function foucusoutTextArea(textareaWrapEl,e,blurE,parentEl){
      if(blurE.relatedTarget != null && parentEl.dataset.cardcode == blurE.relatedTarget.dataset.cardcode ){
        return false;
      }
      textareaWrapEl.remove();
      e.target.style.display = "block";
    }
    function saveCard(){
      console.log("aaa")
    }
